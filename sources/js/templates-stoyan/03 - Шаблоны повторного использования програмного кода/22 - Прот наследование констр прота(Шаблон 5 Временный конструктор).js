// Следующий шаблон
// решает проблему, возникающую при совместном
// использовании прототипа, разрывая прямую связь между родитель-
// ским и дочерним прототипами, но сохраняя при этом преимущества,
// которые дает наличие цепочки прототипов.

// Ниже приводится реализация этого шаблона,
// где мы вводим пустую
// функцию F(), играющую роль передаточного звена между предком и по-
// томком. Свойство prototype функции F() ссылается на родительский
// прототип. А прототипом потомка является экземпляр пустой функции:

function inherit(C, P){
	var F = function(){};
	F.prototype = P.prototype;
	C.prototype = new F();
}